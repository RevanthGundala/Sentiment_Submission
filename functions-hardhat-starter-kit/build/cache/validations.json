{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "67fc95ef421e6a82575137938d285d4b7fad9b85e481d432ee4df1ee43e68bf9",
          "withoutMetadata": "170aa3d0c8746825a9eb7f26b2a3b3949039a64d0abb0b35af3b33bad41f2ca3",
          "linkedWithoutMetadata": "170aa3d0c8746825a9eb7f26b2a3b3949039a64d0abb0b35af3b33bad41f2ca3"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "bytesToString(bytes)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1232",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1232": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1232",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1232": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "0190ae891bd9f5c3275a92402ecb128142abc6c1104d3cb5fa11bf8332a12fce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "6eba8c5b3ad2cd7cbaeb1c85c1a8c9286b414f88cfe46addf373db5dcbef7296",
          "withoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384",
          "linkedWithoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1180",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1180": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1180",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1180": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "0190ae891bd9f5c3275a92402ecb128142abc6c1104d3cb5fa11bf8332a12fce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "325b7c00c587d3b2914f3926e555123d501781732e019a48f8c3318be90979db",
          "withoutMetadata": "068c765155c5e69d52ab413ce20f17a648c7741a4eb42efc7943f6778df01a8b",
          "linkedWithoutMetadata": "068c765155c5e69d52ab413ce20f17a648c7741a4eb42efc7943f6778df01a8b"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1172",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1172": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1172",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1172": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "0190ae891bd9f5c3275a92402ecb128142abc6c1104d3cb5fa11bf8332a12fce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "a04431439db9a7e1fd97185398e3c952d5d9d7e023d113e564efdb81e012c864",
          "withoutMetadata": "55187054470e029b0054dc3163749405e941fb4bd3ce43e43e5c1368cd329b6d",
          "linkedWithoutMetadata": "55187054470e029b0054dc3163749405e941fb4bd3ce43e43e5c1368cd329b6d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1172",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1172": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1172",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1172": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "0190ae891bd9f5c3275a92402ecb128142abc6c1104d3cb5fa11bf8332a12fce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "6eba8c5b3ad2cd7cbaeb1c85c1a8c9286b414f88cfe46addf373db5dcbef7296",
          "withoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384",
          "linkedWithoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1180",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1180": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1180",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1180": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "0190ae891bd9f5c3275a92402ecb128142abc6c1104d3cb5fa11bf8332a12fce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "d522b99c342d125e57a4ef29a17025618bcb2908b396fcf7a96b39283baf7de7",
          "withoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384",
          "linkedWithoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1180",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1180": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1180",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1180": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "0190ae891bd9f5c3275a92402ecb128142abc6c1104d3cb5fa11bf8332a12fce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "b98babaeaf30ba05d0d611a859a10632b4041e02848080f98e604f0411a5caf6",
          "withoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384",
          "linkedWithoutMetadata": "44cdc985a7e8ab77134eb0e3f3c64a01a4d7807d39f1875fa4e8495187acb384"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1179",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1179": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1179",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1179": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "fb2972bc832618ff46840f0cfb5f822f5be46d9c83c0e50ca64446bfda5fc843",
          "withoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55",
          "linkedWithoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1161",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1161": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1161",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1161": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "90881d7d570e9edc107f4417350624df8c9a6cf6da80c1eac0b199511b4ad130",
          "withoutMetadata": "820a6346e8a62ef6b44f0ecd0025075da7d79e91a666ea874ed19bf512815423",
          "linkedWithoutMetadata": "820a6346e8a62ef6b44f0ecd0025075da7d79e91a666ea874ed19bf512815423"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1177",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1177": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1177",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1177": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "a43dd5eced14f5b4b384c82d493caf83db272457bd121c84e0eeb1d8d72e2a4b",
          "withoutMetadata": "55187054470e029b0054dc3163749405e941fb4bd3ce43e43e5c1368cd329b6d",
          "linkedWithoutMetadata": "55187054470e029b0054dc3163749405e941fb4bd3ce43e43e5c1368cd329b6d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1171",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1171": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1171",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1171": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "e084a921f3275238611afad20b567874f2671ea5e6be15b6c931deda39dddc41",
          "withoutMetadata": "a2446f68cb07dd856f7eb8fec9b825f5bd74ef76119c93617447a6a3347539e7",
          "linkedWithoutMetadata": "a2446f68cb07dd856f7eb8fec9b825f5bd74ef76119c93617447a6a3347539e7"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1182",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1182": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1182",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1182": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "63c508cba3a0afaa6e0363e5e6001e9df3f4435c0e36d3f1f86221454f805050",
          "withoutMetadata": "c3425418829f230d473854e698fb9b1c7a8f53ea72e5783d826829984d188195",
          "linkedWithoutMetadata": "c3425418829f230d473854e698fb9b1c7a8f53ea72e5783d826829984d188195"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1182",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1182": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1182",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1182": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "73e588f1007551e2fdc82c35810cef75825f9b71be889705a91f0ad1140742e3",
          "withoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55",
          "linkedWithoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1161",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1161": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1161",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1161": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "d663e99874e8295dee33159d766ef02649982877927a333e369217158260515f",
          "withoutMetadata": "8498096cca3c9d0fb93e5030ed97bd244aea84def6d3b68746d0d26aea5981e6",
          "linkedWithoutMetadata": "8498096cca3c9d0fb93e5030ed97bd244aea84def6d3b68746d0d26aea5981e6"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1190",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1190": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1190",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1190": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/AutomationBase.sol:AutomationBase": {
        "src": "@chainlink/contracts/src/v0.8/AutomationBase.sol:4",
        "version": {
          "withMetadata": "2c89c4701cb00cc993ff7c8a9faca458547d98a99de7222d0dd3cdd7a39166f8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/AutomationCompatible.sol:AutomationCompatible": {
        "src": "@chainlink/contracts/src/v0.8/AutomationCompatible.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "@chainlink/contracts/src/v0.8/AutomationBase.sol:AutomationBase"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract": {
        "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:6",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface"
        ],
        "libraries": [],
        "methods": [
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "latestConfigDigestAndEpoch()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:ERC677ReceiverInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "typeAndVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "9db8ebd323d61f18a6f1a908aded658c1b2fed33b2bf6c28cb343dfdb3e6d3cb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "ecc2b82524563df4a647497fc402ce798172d1e016f016f2e599aac6a97c771e",
          "withoutMetadata": "ecc2b82524563df4a647497fc402ce798172d1e016f016f2e599aac6a97c771e",
          "linkedWithoutMetadata": "ecc2b82524563df4a647497fc402ce798172d1e016f016f2e599aac6a97c771e"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "157dec955027d27dc63684efcbdf5b4f4d84f91c1ab4e905b026cbf125574a6d",
          "withoutMetadata": "f479a5c167cebc3f4506c6e1e11e4f4febaf7748225e16e6a2c5d0898f2ce571",
          "linkedWithoutMetadata": "f479a5c167cebc3f4506c6e1e11e4f4febaf7748225e16e6a2c5d0898f2ce571"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "1f6e27eea429cbe9492bc078a37b4eba6359d4601b53d0dd1cf5f14543438db5",
          "withoutMetadata": "1f6e27eea429cbe9492bc078a37b4eba6359d4601b53d0dd1cf5f14543438db5",
          "linkedWithoutMetadata": "1f6e27eea429cbe9492bc078a37b4eba6359d4601b53d0dd1cf5f14543438db5"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "3c6d88172aaa30c57fdccc50bbc9b274ccf710fda1fa62a36c79a536bc178e70",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "a457d5cd3fb52e14cf14d4964a4fa2dd8afcbd881db23c28c898737d1d003c64",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/AutomatedFunctionsConsumer.sol:AutomatedFunctionsConsumer": {
        "src": "contracts/AutomatedFunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "2557f6894c4c681c6f2225ad07f88e0ff05bc8c2527e3417e812d21622550f4b",
          "withoutMetadata": "cf555ee34a77ed8db2b259b99747d4b2f45ebc66ff5f63140324af92abc6bb5d",
          "linkedWithoutMetadata": "cf555ee34a77ed8db2b259b99747d4b2f45ebc66ff5f63140324af92abc6bb5d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address,uint64,uint32,uint256)",
          "generateRequest(string,bytes,string[])",
          "setRequest(uint64,uint32,uint256,bytes)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)",
          "updateOracleAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AutomatedFunctionsConsumer",
            "src": "contracts/AutomatedFunctionsConsumer.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)7455",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "requestCBOR",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:17"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes32",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:18"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:19"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "7",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:20"
            },
            {
              "label": "subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:21"
            },
            {
              "label": "fulfillGasLimit",
              "offset": 8,
              "slot": "8",
              "type": "t_uint32",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:22"
            },
            {
              "label": "updateInterval",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:23"
            },
            {
              "label": "lastUpkeepTimeStamp",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:24"
            },
            {
              "label": "upkeepCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:25"
            },
            {
              "label": "responseCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)7455": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "98071436e2141436b3db4fa2424b188e68f2b83b950a568464660807add071ad",
          "withoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55",
          "linkedWithoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)7455",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)7455": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/AuthorizedReceiver.sol:AuthorizedReceiver": {
        "src": "contracts/dev/AuthorizedReceiver.sol:7",
        "inherit": [
          "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface"
        ],
        "libraries": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "setAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:16"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:AuthorizedOriginReceiverUpgradeable": {
        "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "authorizedReceiverActive()",
          "activateAuthorizedReceiver()",
          "deactivateAuthorizedReceiver()",
          "addAuthorizedSenders(address[])",
          "removeAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_active",
              "offset": 2,
              "slot": "0",
              "type": "t_bool",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:24"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:25"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable": {
        "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:11",
        "version": {
          "withMetadata": "50fa52b1c64e1b8d590d203717e3ce3bc3d36e7d72c61d8242f8568d2c863766",
          "withoutMetadata": "bc2f6ebe30b6565f593ffe2f827a7e2ec62913ce67cc738ef8a069d68684e6f6",
          "linkedWithoutMetadata": "bc2f6ebe30b6565f593ffe2f827a7e2ec62913ce67cc738ef8a069d68684e6f6"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsBillingRegistry.sol:FunctionsBillingRegistry": {
        "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:23",
        "version": {
          "withMetadata": "59d359191cd00998bab04d8252321700d39d634fb119ecbb869990baa9cfccb6",
          "withoutMetadata": "03de214d3c713e02be0f886755065a76e3932eeb231646933bc9f30219cc81fd",
          "linkedWithoutMetadata": "03de214d3c713e02be0f886755065a76e3932eeb231646933bc9f30219cc81fd"
        },
        "inherit": [
          "contracts/dev/AuthorizedReceiver.sol:AuthorizedReceiver",
          "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface",
          "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:ERC677ReceiverInterface",
          "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setConfig(uint32,uint32,uint256,int256,uint32,uint32)",
          "getConfig()",
          "pause()",
          "unpause()",
          "getTotalBalance()",
          "ownerCancelSubscription(uint64)",
          "recoverFunds(address)",
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "oracleWithdraw(address,uint96)",
          "onTokenTransfer(address,uint256,bytes)",
          "getCurrentsubscriptionId()",
          "getSubscription(uint64)",
          "createSubscription()",
          "getSubscriptionOwner(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "removeConsumer(uint64,address)",
          "addConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)",
          "timeoutRequests(bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:16"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:17"
            },
            {
              "label": "LINK",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(LinkTokenInterface)569",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:31"
            },
            {
              "label": "LINK_ETH_FEED",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(AggregatorV3Interface)443",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:32"
            },
            {
              "label": "ORACLE_WITH_ALLOWLIST",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(AuthorizedOriginReceiverInterface)7228",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:33"
            },
            {
              "label": "s_consumers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint64))",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:70"
            },
            {
              "label": "s_subscriptionConfigs",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint64,t_struct(SubscriptionConfig)4170_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:71"
            },
            {
              "label": "s_subscriptions",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint64,t_struct(Subscription)4162_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:72"
            },
            {
              "label": "s_currentsubscriptionId",
              "offset": 0,
              "slot": "111",
              "type": "t_uint64",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:75"
            },
            {
              "label": "s_totalBalance",
              "offset": 8,
              "slot": "111",
              "type": "t_uint96",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:80"
            },
            {
              "label": "s_withdrawableTokens",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_uint96)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:94"
            },
            {
              "label": "s_requestCommitments",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_bytes32,t_struct(Commitment)4277_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:106"
            },
            {
              "label": "s_fallbackWeiPerUnitLink",
              "offset": 0,
              "slot": "114",
              "type": "t_int256",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:139"
            },
            {
              "label": "s_config",
              "offset": 0,
              "slot": "115",
              "type": "t_struct(Config)4327_storage",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:140"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "118",
              "type": "t_array(t_uint256)49_storage",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:842"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)443": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(AuthorizedOriginReceiverInterface)7228": {
              "label": "contract AuthorizedOriginReceiverInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)569": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint64))": {
              "label": "mapping(address => mapping(uint64 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint96)": {
              "label": "mapping(address => uint96)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Commitment)4277_storage)": {
              "label": "mapping(bytes32 => struct FunctionsBillingRegistry.Commitment)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(Subscription)4162_storage)": {
              "label": "mapping(uint64 => struct FunctionsBillingRegistry.Subscription)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(SubscriptionConfig)4170_storage)": {
              "label": "mapping(uint64 => struct FunctionsBillingRegistry.SubscriptionConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint64)": {
              "label": "mapping(uint64 => uint64)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Commitment)4277_storage": {
              "label": "struct FunctionsBillingRegistry.Commitment",
              "members": [
                {
                  "label": "subscriptionId",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "client",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "gasLimit",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "0"
                },
                {
                  "label": "gasPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "don",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "donFee",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "registryFee",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "estimatedCost",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Config)4327_storage": {
              "label": "struct FunctionsBillingRegistry.Config",
              "members": [
                {
                  "label": "maxGasLimit",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reentrancyLock",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "stalenessSeconds",
                  "type": "t_uint32",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "gasAfterPaymentCalculation",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "gasOverhead",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "requestTimeoutSeconds",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Subscription)4162_storage": {
              "label": "struct FunctionsBillingRegistry.Subscription",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "blockedBalance",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(SubscriptionConfig)4170_storage": {
              "label": "struct FunctionsBillingRegistry.SubscriptionConfig",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "requestedOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "consumers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)7455",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)7455": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsOracle.sol:FunctionsOracle": {
        "src": "contracts/dev/functions/FunctionsOracle.sol:14",
        "version": {
          "withMetadata": "52fb5158bfedabd14c289cffb248f6f680e9371a5ad8a725b9b6e2e470e53090",
          "withoutMetadata": "103cb70751a06211ccfbf9ecb8b1708e07da468c2a22c61ce14bed163bf8137f",
          "linkedWithoutMetadata": "103cb70751a06211ccfbf9ecb8b1708e07da468c2a22c61ce14bed163bf8137f"
        },
        "inherit": [
          "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:AuthorizedOriginReceiverUpgradeable",
          "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:OCR2BaseUpgradeable",
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "typeAndVersion()",
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            },
            {
              "label": "i_uniqueReports",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:21"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)8409_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:41"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:45"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:46"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)8426_storage)",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:68"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:71"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:75"
            },
            {
              "label": "s_active",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:24"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:25"
            },
            {
              "label": "s_donPublicKey",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes_storage",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:39"
            },
            {
              "label": "s_registry",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FunctionsBillingRegistryInterface)7345",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:40"
            },
            {
              "label": "s_nodePublicKeys",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_uint256)49_storage",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:273"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsBillingRegistryInterface)7345": {
              "label": "contract FunctionsBillingRegistryInterface",
              "numberOfBytes": "20"
            },
            "t_enum(Role)8420": {
              "label": "enum OCR2BaseUpgradeable.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Oracle)8426_storage)": {
              "label": "mapping(address => struct OCR2BaseUpgradeable.Oracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ConfigInfo)8409_storage": {
              "label": "struct OCR2BaseUpgradeable.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)8426_storage": {
              "label": "struct OCR2BaseUpgradeable.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)8420",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/AuthorizedOriginReceiverInterface.sol:AuthorizedOriginReceiverInterface": {
        "src": "contracts/dev/interfaces/AuthorizedOriginReceiverInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "authorizedReceiverActive()",
          "activateAuthorizedReceiver()",
          "deactivateAuthorizedReceiver()",
          "addAuthorizedSenders(address[])",
          "removeAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface": {
        "src": "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAuthorizedSender(address)",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/ocr2/OCR2Base.sol:OCR2Base": {
        "src": "contracts/dev/ocr2/OCR2Base.sol:17",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "latestConfigDigestAndEpoch()",
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "transmitters()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OCR2Base",
            "src": "contracts/dev/ocr2/OCR2Base.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_uniqueReports",
            "src": "contracts/dev/ocr2/OCR2Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)7497_storage",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:36"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:40"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:41"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)7514_storage)",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:63"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:66"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(Role)7508": {
              "label": "enum OCR2Base.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Oracle)7514_storage)": {
              "label": "mapping(address => struct OCR2Base.Oracle)",
              "numberOfBytes": "32"
            },
            "t_struct(ConfigInfo)7497_storage": {
              "label": "struct OCR2Base.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)7514_storage": {
              "label": "struct OCR2Base.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)7508",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:OCR2BaseUpgradeable": {
        "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:18",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "latestConfigDigestAndEpoch()",
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "transmitters()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            },
            {
              "label": "i_uniqueReports",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:21"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)8409_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:41"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:45"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:46"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)8426_storage)",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:68"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:71"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(Role)8420": {
              "label": "enum OCR2BaseUpgradeable.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Oracle)8426_storage)": {
              "label": "mapping(address => struct OCR2BaseUpgradeable.Oracle)",
              "numberOfBytes": "32"
            },
            "t_struct(ConfigInfo)8409_storage": {
              "label": "struct OCR2BaseUpgradeable.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)8426_storage": {
              "label": "struct OCR2BaseUpgradeable.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)8420",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:Pausable": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:17",
        "inherit": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:SafeCast": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:22",
        "version": {
          "withMetadata": "73d58a03269f311ef28e0f959100e46c3c93c82c77d7dd0a0762524b50f6e03c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "d94689e295c18794987922c36b5dd7f14c856474456a2f9352c4d0d080f55d7d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:Address": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "e84d908c289637688630786eaf5eaeb63da1dae472fd5753ff278cdba77ca485",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:177"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:177"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.4/ERC677Token.sol:ERC677Token": {
        "src": "@chainlink/contracts/src/v0.4/ERC677Token.sol:8",
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:ERC677",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/LinkToken.sol:LinkToken": {
        "src": "@chainlink/contracts/src/v0.4/LinkToken.sol:8",
        "version": {
          "withMetadata": "0c849729feb55964fb72fbba902b0d8dff50625477329130bdb86f8094f9493a",
          "withoutMetadata": "dcb7b29c70b560d2b415ab628a7cf9f903c128d867b6e96bcff8ced43d39d28a",
          "linkedWithoutMetadata": "dcb7b29c70b560d2b415ab628a7cf9f903c128d867b6e96bcff8ced43d39d28a"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.4/ERC677Token.sol:ERC677Token",
          "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:ERC677",
          "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:StandardToken",
          "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:BasicToken",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "LinkToken()",
          "transferAndCall(address,uint256,bytes)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:11",
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Basic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:ERC677": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:5",
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC677Receiver.sol:ERC677Receiver": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC677Receiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:BasicToken": {
        "src": "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:12",
        "version": {
          "withMetadata": "3693a76f11ce178d5fbfd079cd5eb8c8e24b21edce96c235e50a63b64bf66407",
          "withoutMetadata": "4fcf70a8bc68714c7f78a8347caa95330804cd67337543e27922850c66a44b5f",
          "linkedWithoutMetadata": "4fcf70a8bc68714c7f78a8347caa95330804cd67337543e27922850c66a44b5f"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.4/vendor/SafeMathChainlink.sol:SafeMathChainlink"
        ],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BasicToken",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:15"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/vendor/SafeMathChainlink.sol:SafeMathChainlink": {
        "src": "@chainlink/contracts/src/v0.4/vendor/SafeMathChainlink.sol:8",
        "version": {
          "withMetadata": "9cdb3b01bb1d09a31e69628419b9ff03e5e3fee25beac127b52065e09ef5c188",
          "withoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688",
          "linkedWithoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:StandardToken": {
        "src": "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:15",
        "version": {
          "withMetadata": "3411c4525259b5c4f2d052ced1457e6b4a2afae2ed219bc6f3f08522fa5f0a28",
          "withoutMetadata": "8619713a82168a3b8b5fea42a2e9425b397932829ff05af8758924ba1e47344d",
          "linkedWithoutMetadata": "8619713a82168a3b8b5fea42a2e9425b397932829ff05af8758924ba1e47344d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:BasicToken",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseApproval(address,uint256)",
          "decreaseApproval(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "StandardToken",
              "label": "allowed",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      }
    },
    {
      "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:AggregatorInterface": {
        "src": "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.0"
      },
      "@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface": {
        "src": "@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface",
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:AggregatorInterface"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.0"
      },
      "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.0"
      },
      "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:MockV3Aggregator": {
        "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:14",
        "version": {
          "withMetadata": "28f51b4729bfb4220f63d14af6ea2ce565207a62c00fa7551fe9012849f6e962",
          "withoutMetadata": "b34b3bb8a285ac46e3c1468c797eae35652f4bd46019a62bd7404c18d642502a",
          "linkedWithoutMetadata": "b34b3bb8a285ac46e3c1468c797eae35652f4bd46019a62bd7404c18d642502a"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface",
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface",
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:AggregatorInterface"
        ],
        "libraries": [],
        "methods": [
          "(uint8,int256)",
          "updateAnswer(int256)",
          "updateRoundData(uint80,int256,uint256,uint256)",
          "getRoundData(uint80)",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockV3Aggregator",
            "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "decimals",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:17"
            },
            {
              "label": "latestAnswer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:18"
            },
            {
              "label": "latestTimestamp",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:19"
            },
            {
              "label": "latestRound",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:20"
            },
            {
              "label": "getAnswer",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_int256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:22"
            },
            {
              "label": "getTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:23"
            },
            {
              "label": "getStartedAt",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:24"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_int256)": {
              "label": "mapping(uint256 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.0"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/AutomationBase.sol:AutomationBase": {
        "src": "@chainlink/contracts/src/v0.8/AutomationBase.sol:4",
        "version": {
          "withMetadata": "2c89c4701cb00cc993ff7c8a9faca458547d98a99de7222d0dd3cdd7a39166f8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/AutomationCompatible.sol:AutomationCompatible": {
        "src": "@chainlink/contracts/src/v0.8/AutomationCompatible.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "@chainlink/contracts/src/v0.8/AutomationBase.sol:AutomationBase"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/AutomatedFunctionsConsumer.sol:AutomatedFunctionsConsumer": {
        "src": "contracts/AutomatedFunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "2557f6894c4c681c6f2225ad07f88e0ff05bc8c2527e3417e812d21622550f4b",
          "withoutMetadata": "cf555ee34a77ed8db2b259b99747d4b2f45ebc66ff5f63140324af92abc6bb5d",
          "linkedWithoutMetadata": "cf555ee34a77ed8db2b259b99747d4b2f45ebc66ff5f63140324af92abc6bb5d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address,uint64,uint32,uint256)",
          "generateRequest(string,bytes,string[])",
          "setRequest(uint64,uint32,uint256,bytes)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)",
          "updateOracleAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AutomatedFunctionsConsumer",
            "src": "contracts/AutomatedFunctionsConsumer.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1343",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "requestCBOR",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:17"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes32",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:18"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:19"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "7",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:20"
            },
            {
              "label": "subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:21"
            },
            {
              "label": "fulfillGasLimit",
              "offset": 8,
              "slot": "8",
              "type": "t_uint32",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:22"
            },
            {
              "label": "updateInterval",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:23"
            },
            {
              "label": "lastUpkeepTimeStamp",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:24"
            },
            {
              "label": "upkeepCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:25"
            },
            {
              "label": "responseCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1343": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)1343",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)1343": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/AutomationBase.sol:AutomationBase": {
        "src": "@chainlink/contracts/src/v0.8/AutomationBase.sol:4",
        "version": {
          "withMetadata": "2c89c4701cb00cc993ff7c8a9faca458547d98a99de7222d0dd3cdd7a39166f8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/AutomationCompatible.sol:AutomationCompatible": {
        "src": "@chainlink/contracts/src/v0.8/AutomationCompatible.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "@chainlink/contracts/src/v0.8/AutomationBase.sol:AutomationBase"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "5f955258edc462f7d57aa9d6e205f2daa25158b41f2391ec2348131095978af7",
          "withoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea",
          "linkedWithoutMetadata": "3cbfe14c0e91a6914b81d422e28f153d7f6bd5a512a368687c63f461125f63ea"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "dbc657463a2202e1493f80dfb18b4cb87e1f9c199d910d0c939abf1127d531e9",
          "withoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8",
          "linkedWithoutMetadata": "d280a6480a7aa39ab8e523ddd6852aa70b81beadbbe275aad78a099b16e8b6c8"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract": {
        "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:6",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface"
        ],
        "libraries": [],
        "methods": [
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "latestConfigDigestAndEpoch()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:ERC677ReceiverInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "typeAndVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "9db8ebd323d61f18a6f1a908aded658c1b2fed33b2bf6c28cb343dfdb3e6d3cb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "ecc2b82524563df4a647497fc402ce798172d1e016f016f2e599aac6a97c771e",
          "withoutMetadata": "ecc2b82524563df4a647497fc402ce798172d1e016f016f2e599aac6a97c771e",
          "linkedWithoutMetadata": "ecc2b82524563df4a647497fc402ce798172d1e016f016f2e599aac6a97c771e"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "157dec955027d27dc63684efcbdf5b4f4d84f91c1ab4e905b026cbf125574a6d",
          "withoutMetadata": "f479a5c167cebc3f4506c6e1e11e4f4febaf7748225e16e6a2c5d0898f2ce571",
          "linkedWithoutMetadata": "f479a5c167cebc3f4506c6e1e11e4f4febaf7748225e16e6a2c5d0898f2ce571"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "1f6e27eea429cbe9492bc078a37b4eba6359d4601b53d0dd1cf5f14543438db5",
          "withoutMetadata": "1f6e27eea429cbe9492bc078a37b4eba6359d4601b53d0dd1cf5f14543438db5",
          "linkedWithoutMetadata": "1f6e27eea429cbe9492bc078a37b4eba6359d4601b53d0dd1cf5f14543438db5"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "3c6d88172aaa30c57fdccc50bbc9b274ccf710fda1fa62a36c79a536bc178e70",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "a457d5cd3fb52e14cf14d4964a4fa2dd8afcbd881db23c28c898737d1d003c64",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/AutomatedFunctionsConsumer.sol:AutomatedFunctionsConsumer": {
        "src": "contracts/AutomatedFunctionsConsumer.sol:14",
        "version": {
          "withMetadata": "2557f6894c4c681c6f2225ad07f88e0ff05bc8c2527e3417e812d21622550f4b",
          "withoutMetadata": "cf555ee34a77ed8db2b259b99747d4b2f45ebc66ff5f63140324af92abc6bb5d",
          "linkedWithoutMetadata": "cf555ee34a77ed8db2b259b99747d4b2f45ebc66ff5f63140324af92abc6bb5d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address,uint64,uint32,uint256)",
          "generateRequest(string,bytes,string[])",
          "setRequest(uint64,uint32,uint256,bytes)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)",
          "updateOracleAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AutomatedFunctionsConsumer",
            "src": "contracts/AutomatedFunctionsConsumer.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)7455",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "requestCBOR",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:17"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes32",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:18"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:19"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "7",
              "type": "t_bytes_storage",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:20"
            },
            {
              "label": "subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:21"
            },
            {
              "label": "fulfillGasLimit",
              "offset": 8,
              "slot": "8",
              "type": "t_uint32",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:22"
            },
            {
              "label": "updateInterval",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:23"
            },
            {
              "label": "lastUpkeepTimeStamp",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:24"
            },
            {
              "label": "upkeepCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:25"
            },
            {
              "label": "responseCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "AutomatedFunctionsConsumer",
              "src": "contracts/AutomatedFunctionsConsumer.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)7455": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/FunctionsConsumer.sol:FunctionsConsumer": {
        "src": "contracts/FunctionsConsumer.sol:13",
        "version": {
          "withMetadata": "98071436e2141436b3db4fa2424b188e68f2b83b950a568464660807add071ad",
          "withoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55",
          "linkedWithoutMetadata": "0f6d495b88d68e97bba181088a774d139e7ed2720502fba430c2d85e0ba6bd55"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/functions/FunctionsClient.sol:FunctionsClient",
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "(address)",
          "executeRequest(string,bytes,string[],uint64,uint32)",
          "updateOracleAddress(address)",
          "addSimulatedRequestId(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsConsumer",
            "src": "contracts/FunctionsConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)7455",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "latestRequestId",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:16"
            },
            {
              "label": "latestResponse",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:17"
            },
            {
              "label": "latestError",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes_storage",
              "contract": "FunctionsConsumer",
              "src": "contracts/FunctionsConsumer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)7455": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/AuthorizedReceiver.sol:AuthorizedReceiver": {
        "src": "contracts/dev/AuthorizedReceiver.sol:7",
        "inherit": [
          "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface"
        ],
        "libraries": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "setAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:16"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:AuthorizedOriginReceiverUpgradeable": {
        "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "authorizedReceiverActive()",
          "activateAuthorizedReceiver()",
          "deactivateAuthorizedReceiver()",
          "addAuthorizedSenders(address[])",
          "removeAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_active",
              "offset": 2,
              "slot": "0",
              "type": "t_bool",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:24"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:25"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable": {
        "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:11",
        "version": {
          "withMetadata": "50fa52b1c64e1b8d590d203717e3ce3bc3d36e7d72c61d8242f8568d2c863766",
          "withoutMetadata": "bc2f6ebe30b6565f593ffe2f827a7e2ec62913ce67cc738ef8a069d68684e6f6",
          "linkedWithoutMetadata": "bc2f6ebe30b6565f593ffe2f827a7e2ec62913ce67cc738ef8a069d68684e6f6"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/Functions.sol:Functions": {
        "src": "contracts/dev/functions/Functions.sol:9",
        "version": {
          "withMetadata": "163f824aba031b1c0b719e1a8f49e14bdb5f448fe0fd9baea22f1dc714d2b006",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR",
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsBillingRegistry.sol:FunctionsBillingRegistry": {
        "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:23",
        "version": {
          "withMetadata": "59d359191cd00998bab04d8252321700d39d634fb119ecbb869990baa9cfccb6",
          "withoutMetadata": "03de214d3c713e02be0f886755065a76e3932eeb231646933bc9f30219cc81fd",
          "linkedWithoutMetadata": "03de214d3c713e02be0f886755065a76e3932eeb231646933bc9f30219cc81fd"
        },
        "inherit": [
          "contracts/dev/AuthorizedReceiver.sol:AuthorizedReceiver",
          "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface",
          "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:ERC677ReceiverInterface",
          "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setConfig(uint32,uint32,uint256,int256,uint32,uint32)",
          "getConfig()",
          "pause()",
          "unpause()",
          "getTotalBalance()",
          "ownerCancelSubscription(uint64)",
          "recoverFunds(address)",
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "oracleWithdraw(address,uint96)",
          "onTokenTransfer(address,uint256,bytes)",
          "getCurrentsubscriptionId()",
          "getSubscription(uint64)",
          "createSubscription()",
          "getSubscriptionOwner(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "removeConsumer(uint64,address)",
          "addConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)",
          "timeoutRequests(bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:16"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/dev/AuthorizedReceiver.sol:17"
            },
            {
              "label": "LINK",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(LinkTokenInterface)569",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:31"
            },
            {
              "label": "LINK_ETH_FEED",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(AggregatorV3Interface)443",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:32"
            },
            {
              "label": "ORACLE_WITH_ALLOWLIST",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(AuthorizedOriginReceiverInterface)7228",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:33"
            },
            {
              "label": "s_consumers",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint64))",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:70"
            },
            {
              "label": "s_subscriptionConfigs",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint64,t_struct(SubscriptionConfig)4170_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:71"
            },
            {
              "label": "s_subscriptions",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint64,t_struct(Subscription)4162_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:72"
            },
            {
              "label": "s_currentsubscriptionId",
              "offset": 0,
              "slot": "111",
              "type": "t_uint64",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:75"
            },
            {
              "label": "s_totalBalance",
              "offset": 8,
              "slot": "111",
              "type": "t_uint96",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:80"
            },
            {
              "label": "s_withdrawableTokens",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_uint96)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:94"
            },
            {
              "label": "s_requestCommitments",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_bytes32,t_struct(Commitment)4277_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:106"
            },
            {
              "label": "s_fallbackWeiPerUnitLink",
              "offset": 0,
              "slot": "114",
              "type": "t_int256",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:139"
            },
            {
              "label": "s_config",
              "offset": 0,
              "slot": "115",
              "type": "t_struct(Config)4327_storage",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:140"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "118",
              "type": "t_array(t_uint256)49_storage",
              "contract": "FunctionsBillingRegistry",
              "src": "contracts/dev/functions/FunctionsBillingRegistry.sol:842"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)443": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(AuthorizedOriginReceiverInterface)7228": {
              "label": "contract AuthorizedOriginReceiverInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)569": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint64))": {
              "label": "mapping(address => mapping(uint64 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint96)": {
              "label": "mapping(address => uint96)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Commitment)4277_storage)": {
              "label": "mapping(bytes32 => struct FunctionsBillingRegistry.Commitment)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(Subscription)4162_storage)": {
              "label": "mapping(uint64 => struct FunctionsBillingRegistry.Subscription)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(SubscriptionConfig)4170_storage)": {
              "label": "mapping(uint64 => struct FunctionsBillingRegistry.SubscriptionConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint64)": {
              "label": "mapping(uint64 => uint64)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Commitment)4277_storage": {
              "label": "struct FunctionsBillingRegistry.Commitment",
              "members": [
                {
                  "label": "subscriptionId",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "client",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "gasLimit",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "0"
                },
                {
                  "label": "gasPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "don",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "donFee",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "registryFee",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "estimatedCost",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Config)4327_storage": {
              "label": "struct FunctionsBillingRegistry.Config",
              "members": [
                {
                  "label": "maxGasLimit",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reentrancyLock",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "stalenessSeconds",
                  "type": "t_uint32",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "gasAfterPaymentCalculation",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "gasOverhead",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "requestTimeoutSeconds",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Subscription)4162_storage": {
              "label": "struct FunctionsBillingRegistry.Subscription",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "blockedBalance",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(SubscriptionConfig)4170_storage": {
              "label": "struct FunctionsBillingRegistry.SubscriptionConfig",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "requestedOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "consumers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsClient.sol:FunctionsClient": {
        "src": "contracts/dev/functions/FunctionsClient.sol:12",
        "inherit": [
          "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "contracts/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsClient",
            "src": "contracts/dev/functions/FunctionsClient.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)7455",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "contracts/dev/functions/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)7455": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/functions/FunctionsOracle.sol:FunctionsOracle": {
        "src": "contracts/dev/functions/FunctionsOracle.sol:14",
        "version": {
          "withMetadata": "52fb5158bfedabd14c289cffb248f6f680e9371a5ad8a725b9b6e2e470e53090",
          "withoutMetadata": "103cb70751a06211ccfbf9ecb8b1708e07da468c2a22c61ce14bed163bf8137f",
          "linkedWithoutMetadata": "103cb70751a06211ccfbf9ecb8b1708e07da468c2a22c61ce14bed163bf8137f"
        },
        "inherit": [
          "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:AuthorizedOriginReceiverUpgradeable",
          "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:OCR2BaseUpgradeable",
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "typeAndVersion()",
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            },
            {
              "label": "i_uniqueReports",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:21"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)8409_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:41"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:45"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:46"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)8426_storage)",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:68"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:71"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:75"
            },
            {
              "label": "s_active",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:24"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(AddressSet)11686_storage",
              "contract": "AuthorizedOriginReceiverUpgradeable",
              "src": "contracts/dev/functions/AuthorizedOriginReceiverUpgradeable.sol:25"
            },
            {
              "label": "s_donPublicKey",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes_storage",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:39"
            },
            {
              "label": "s_registry",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(FunctionsBillingRegistryInterface)7345",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:40"
            },
            {
              "label": "s_nodePublicKeys",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_uint256)49_storage",
              "contract": "FunctionsOracle",
              "src": "contracts/dev/functions/FunctionsOracle.sol:273"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsBillingRegistryInterface)7345": {
              "label": "contract FunctionsBillingRegistryInterface",
              "numberOfBytes": "20"
            },
            "t_enum(Role)8420": {
              "label": "enum OCR2BaseUpgradeable.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Oracle)8426_storage)": {
              "label": "mapping(address => struct OCR2BaseUpgradeable.Oracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)11686_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)11371_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ConfigInfo)8409_storage": {
              "label": "struct OCR2BaseUpgradeable.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)8426_storage": {
              "label": "struct OCR2BaseUpgradeable.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)8420",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)11371_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/AuthorizedOriginReceiverInterface.sol:AuthorizedOriginReceiverInterface": {
        "src": "contracts/dev/interfaces/AuthorizedOriginReceiverInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "authorizedReceiverActive()",
          "activateAuthorizedReceiver()",
          "deactivateAuthorizedReceiver()",
          "addAuthorizedSenders(address[])",
          "removeAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface": {
        "src": "contracts/dev/interfaces/AuthorizedReceiverInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAuthorizedSender(address)",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "contracts/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "contracts/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "contracts/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/ocr2/OCR2Base.sol:OCR2Base": {
        "src": "contracts/dev/ocr2/OCR2Base.sol:17",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "latestConfigDigestAndEpoch()",
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "transmitters()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OCR2Base",
            "src": "contracts/dev/ocr2/OCR2Base.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_uniqueReports",
            "src": "contracts/dev/ocr2/OCR2Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)7497_storage",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:36"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:40"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:41"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)7514_storage)",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:63"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:66"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "contracts/dev/ocr2/OCR2Base.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(Role)7508": {
              "label": "enum OCR2Base.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Oracle)7514_storage)": {
              "label": "mapping(address => struct OCR2Base.Oracle)",
              "numberOfBytes": "32"
            },
            "t_struct(ConfigInfo)7497_storage": {
              "label": "struct OCR2Base.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)7514_storage": {
              "label": "struct OCR2Base.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)7508",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:OCR2BaseUpgradeable": {
        "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:18",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:ConfirmedOwnerUpgradeable",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "latestConfigDigestAndEpoch()",
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "transmitters()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "s_owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:12"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerUpgradeable",
              "src": "contracts/dev/functions/ConfirmedOwnerUpgradeable.sol:13"
            },
            {
              "label": "i_uniqueReports",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:21"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)8409_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:41"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:45"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:46"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)8426_storage)",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:68"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:71"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2BaseUpgradeable",
              "src": "contracts/dev/ocr2/OCR2BaseUpgradeable.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(Role)8420": {
              "label": "enum OCR2BaseUpgradeable.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Oracle)8426_storage)": {
              "label": "mapping(address => struct OCR2BaseUpgradeable.Oracle)",
              "numberOfBytes": "32"
            },
            "t_struct(ConfigInfo)8409_storage": {
              "label": "struct OCR2BaseUpgradeable.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)8426_storage": {
              "label": "struct OCR2BaseUpgradeable.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)8420",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer": {
        "src": "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:12",
        "version": {
          "withMetadata": "902da7c9e162d9f61b4e26f4a18edc3afa01a1f91fdf6fbaaac7a000dc46543e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:Pausable": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:17",
        "inherit": [
          "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:SafeCast": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:22",
        "version": {
          "withMetadata": "73d58a03269f311ef28e0f959100e46c3c93c82c77d7dd0a0762524b50f6e03c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "d94689e295c18794987922c36b5dd7f14c856474456a2f9352c4d0d080f55d7d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:Address": {
        "src": "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "e84d908c289637688630786eaf5eaeb63da1dae472fd5753ff278cdba77ca485",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:177"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/dev/vendor/openzeppelin-solidity/v4.3.1/contracts/utils/Address.sol:177"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      },
      "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:CBOR": {
        "src": "contracts/dev/vendor/solidity-cborutils/2.0.0/CBOR.sol:19",
        "version": {
          "withMetadata": "9381a60db974f3f1488c24272a05967a81fa501420cadb82ddad6db104d5b797",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/dev/vendor/@ensdomains/buffer/0.1.0/Buffer.sol:Buffer"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "@chainlink/contracts/src/v0.4/ERC677Token.sol:ERC677Token": {
        "src": "@chainlink/contracts/src/v0.4/ERC677Token.sol:8",
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:ERC677",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/LinkToken.sol:LinkToken": {
        "src": "@chainlink/contracts/src/v0.4/LinkToken.sol:8",
        "version": {
          "withMetadata": "0c849729feb55964fb72fbba902b0d8dff50625477329130bdb86f8094f9493a",
          "withoutMetadata": "dcb7b29c70b560d2b415ab628a7cf9f903c128d867b6e96bcff8ced43d39d28a",
          "linkedWithoutMetadata": "dcb7b29c70b560d2b415ab628a7cf9f903c128d867b6e96bcff8ced43d39d28a"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.4/ERC677Token.sol:ERC677Token",
          "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:ERC677",
          "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:StandardToken",
          "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:BasicToken",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "LinkToken()",
          "transferAndCall(address,uint256,bytes)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:11",
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Basic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:ERC677": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC677.sol:5",
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/interfaces/ERC677Receiver.sol:ERC677Receiver": {
        "src": "@chainlink/contracts/src/v0.4/interfaces/ERC677Receiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:BasicToken": {
        "src": "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:12",
        "version": {
          "withMetadata": "3693a76f11ce178d5fbfd079cd5eb8c8e24b21edce96c235e50a63b64bf66407",
          "withoutMetadata": "4fcf70a8bc68714c7f78a8347caa95330804cd67337543e27922850c66a44b5f",
          "linkedWithoutMetadata": "4fcf70a8bc68714c7f78a8347caa95330804cd67337543e27922850c66a44b5f"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.4/vendor/SafeMathChainlink.sol:SafeMathChainlink"
        ],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BasicToken",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:15"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/vendor/SafeMathChainlink.sol:SafeMathChainlink": {
        "src": "@chainlink/contracts/src/v0.4/vendor/SafeMathChainlink.sol:8",
        "version": {
          "withMetadata": "9cdb3b01bb1d09a31e69628419b9ff03e5e3fee25beac127b52065e09ef5c188",
          "withoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688",
          "linkedWithoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      },
      "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:StandardToken": {
        "src": "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:15",
        "version": {
          "withMetadata": "3411c4525259b5c4f2d052ced1457e6b4a2afae2ed219bc6f3f08522fa5f0a28",
          "withoutMetadata": "8619713a82168a3b8b5fea42a2e9425b397932829ff05af8758924ba1e47344d",
          "linkedWithoutMetadata": "8619713a82168a3b8b5fea42a2e9425b397932829ff05af8758924ba1e47344d"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.4/vendor/BasicToken.sol:BasicToken",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20.sol:ERC20",
          "@chainlink/contracts/src/v0.4/interfaces/ERC20Basic.sol:ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseApproval(address,uint256)",
          "decreaseApproval(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "StandardToken",
              "label": "allowed",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@chainlink/contracts/src/v0.4/vendor/StandardToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.4.24"
      }
    },
    {
      "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:AggregatorInterface": {
        "src": "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.0"
      },
      "@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface": {
        "src": "@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface",
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:AggregatorInterface"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.0"
      },
      "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.0"
      },
      "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:MockV3Aggregator": {
        "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:14",
        "version": {
          "withMetadata": "28f51b4729bfb4220f63d14af6ea2ce565207a62c00fa7551fe9012849f6e962",
          "withoutMetadata": "b34b3bb8a285ac46e3c1468c797eae35652f4bd46019a62bd7404c18d642502a",
          "linkedWithoutMetadata": "b34b3bb8a285ac46e3c1468c797eae35652f4bd46019a62bd7404c18d642502a"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface",
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface",
          "@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol:AggregatorInterface"
        ],
        "libraries": [],
        "methods": [
          "(uint8,int256)",
          "updateAnswer(int256)",
          "updateRoundData(uint80,int256,uint256,uint256)",
          "getRoundData(uint80)",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockV3Aggregator",
            "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "decimals",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:17"
            },
            {
              "label": "latestAnswer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:18"
            },
            {
              "label": "latestTimestamp",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:19"
            },
            {
              "label": "latestRound",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:20"
            },
            {
              "label": "getAnswer",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_int256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:22"
            },
            {
              "label": "getTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:23"
            },
            {
              "label": "getStartedAt",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.7/tests/MockV3Aggregator.sol:24"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_int256)": {
              "label": "mapping(uint256 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.0"
      }
    }
  ]
}